{"version":3,"sources":["../../src/libs/email_verifier.js"],"names":["mongoose","require","nev","bcrypt","account","tempAccount","myHasher","password","tempUserData","insertTempUser","callback","genSalt","err","salt","hash","configure","tempUserModel","persistentUserModel","expirationTime","tempUserCollection","verificationURL","transportOptions","service","auth","user","pass","verifyMailOptions","from","subject","html","text","shouldSendConfirmation","confirmMailOptions","hashingFunction","passwordFieldName","options","console","log","generateTempUserModel","module","exports"],"mappings":";;;;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,MAAMD,QAAQ,oBAAR,EAA8BD,QAA9B,CAAV;AACA,IAAIG,SAASF,QAAQ,QAAR,CAAb;AACA,IAAIG,UAAUH,QAAQ,mBAAR,CAAd;AACA,IAAII,cAAcJ,QAAQ,wBAAR,CAAlB;;AAIA;AACA,IAAIK,WAAW,SAAXA,QAAW,CAASC,QAAT,EAAmBC,YAAnB,EAAiCC,cAAjC,EAAiDC,QAAjD,EAA2D;AACxEP,SAAOQ,OAAP,CAAe,CAAf,EAAkB,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACpCV,WAAOW,IAAP,CAAYP,QAAZ,EAAsBM,IAAtB,EAA4B,UAASD,GAAT,EAAcE,IAAd,EAAoB;AAC9C,aAAOL,eAAeK,IAAf,EAAqBN,YAArB,EAAmCE,QAAnC,CAAP;AACD,KAFD;AAGD,GAJD;AAKD,CAND;;AAQAR,IAAIa,SAAJ,CAAc;AACZC,iBAAeX,WADH;AAEZY,uBAAqBb,OAFT;AAGZc,kBAAgB,GAHJ,EAGS;AACvBC,sBAAoB,eAJN;AAKZC,mBAAiB,oDALL;AAMZC,oBAAkB;AAChBC,aAAS,OADO;AAEhBC,UAAM;AACJC,YAAM,+BADF;AAEJC,YAAM;AAFF;AAFU,GANN;AAaZC,qBAAmB;AACbC,UAAM,8CADO;AAEbC,aAAS,sBAFI;AAGbC,UAAM,+KACE,8DAJK;AAKbC,UAAM;AALO,GAbP;AAoBTC,0BAAwB,IApBf;AAqBVC,sBAAoB;AAChBL,UAAM,8CADU;AAEhBC,aAAS,wBAFO;AAGhBC,UAAM,qDAHU;AAIhBC,UAAM;AAJU,GArBV;;AA4BZG,mBAAiB3B,QA5BL;AA6BZ4B,qBAAmB;AA7BP,CAAd,EA8BG,UAAStB,GAAT,EAAcuB,OAAd,EAAuB;AACxB,MAAIvB,GAAJ,EAAS;AACPwB,YAAQC,GAAR,CAAYzB,GAAZ;AACA;AACD;;AAEDwB,UAAQC,GAAR,CAAY,kBAAkB,QAAOF,OAAP,yCAAOA,OAAP,OAAmB,QAArC,CAAZ;AACD,CArCD;;AAuCAjC,IAAIoC,qBAAJ,CAA0BlC,OAA1B,EAAmC,UAASQ,GAAT,EAAcP,WAAd,EAA2B;AAC5D,MAAIO,GAAJ,EAAS;AACPwB,YAAQC,GAAR,CAAYzB,GAAZ;AACA;AACD;;AAEDwB,UAAQC,GAAR,CAAY,oCAAoC,OAAOrB,aAAP,KAAyB,UAA7D,CAAZ;AACD,CAPD;;AASAuB,OAAOC,OAAP,GAAiBtC,GAAjB","file":"email_verifier.js","sourcesContent":["var mongoose = require('mongoose');\nvar nev = require('email-verification')(mongoose);\nvar bcrypt = require('bcrypt');\nvar account = require('../models/account');\nvar tempAccount = require('../models/temp_account');\n\n\n\n// async version of hashing function\nvar myHasher = function(password, tempUserData, insertTempUser, callback) {\n  bcrypt.genSalt(8, function(err, salt) {\n    bcrypt.hash(password, salt, function(err, hash) {\n      return insertTempUser(hash, tempUserData, callback);\n    });\n  });\n};\n\nnev.configure({\n  tempUserModel: tempAccount,\n  persistentUserModel: account,\n  expirationTime: 600, // 10 minutes\ntempUserCollection: 'temp_accounts',\n  verificationURL: 'http://localhost:3000/services/verification/${URL}',\n  transportOptions: {\n    service: 'Gmail',\n    auth: {\n      user: 'stevenstradersystem@gmail.com',\n      pass: 'trader$@stevens'\n    }\n  },\n  verifyMailOptions: {\n        from: 'Do Not Reply <stevenstradersystem@gmail.com>',\n        subject: 'Confirm your account',\n        html: '<p>Thank you for registering in the Stevens Trader System\\n \\nPlease verify your account by clicking <a href=\"${URL}\">this link</a>. If you are unable to do so, copy and ' +\n                'paste the following link into your browser:</p><p>${URL}</p>',\n        text: 'Please verify your account by clicking the following link, or by copying and pasting it into your browser: ${URL}'\n    },\n     shouldSendConfirmation: true,\n    confirmMailOptions: {\n        from: 'Do Not Reply <stevenstradersystem@gmail.com>',\n        subject: 'Successfully verified!',\n        html: '<p>Your account has been successfully verified.</p>',\n        text: 'Your account has been successfully verified.'\n    },\n\n  hashingFunction: myHasher,\n  passwordFieldName: 'password',\n}, function(err, options) {\n  if (err) {\n    console.log(err);\n    return;\n  }\n\n  console.log('configured: ' + (typeof options === 'object'));\n});\n\nnev.generateTempUserModel(account, function(err, tempAccount) {\n  if (err) {\n    console.log(err);\n    return;\n  }\n\n  console.log('generated temp account model: ' + (typeof tempUserModel === 'function'));\n});\n \nmodule.exports = nev"]}